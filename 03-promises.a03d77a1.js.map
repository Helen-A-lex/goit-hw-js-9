{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAiBC,SAASC,cAAc,SAExCC,EAAkBF,SAASC,cAAc,uBAEzCE,EAAiBH,SAASC,cAAc,sBAExCG,EAAcJ,SAASC,cAAc,wBAwB3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAI,CAAEH,WAAUC,UAEhBG,EAAI,CAAEJ,WAAUC,S,GAEjBA,E,IA/BPR,EAAee,iBAAiB,UAEhC,SAA8BC,GAC5BA,EAAEC,iBAMF,IALA,IAAIC,EAAQC,OAAOhB,EAAgBiB,OAE/BC,EAAOF,OAAOf,EAAegB,OAE7BE,EAASH,OAAOd,EAAYe,OACvBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAEnCjB,EAAciB,EADKL,EAAQG,EAAOE,GAE/BC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBV,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9DqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBV,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAGhER,EAAe+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formPromisesEl = document.querySelector('.form');\n\nconst inputFirstDelay = document.querySelector('input[name=\"delay\"]');\n\nconst inputDelayStep = document.querySelector('input[name=\"step\"]');\n\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\n\nformPromisesEl.addEventListener('submit', onformPromisesSubmit);\n\nfunction onformPromisesSubmit(e) {\n  e.preventDefault();\n  let delay = Number(inputFirstDelay.value);\n\n  let step = Number(inputDelayStep.value);\n\n  let amount = Number(inputAmount.value);\n  for (let i = 1; i <= amount; i += 1) {\n    let promiseDelay = delay + step * i;\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  formPromisesEl.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formPromisesEl","document","querySelector","$ce04d3a99e08e73b$var$inputFirstDelay","$ce04d3a99e08e73b$var$inputDelayStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.a03d77a1.js.map"}